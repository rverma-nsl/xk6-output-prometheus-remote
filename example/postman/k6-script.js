// Auto-generated by the postman-to-k6 converter

import "/home/k6/libs/shim/core.js";
import "/home/k6/libs/shim/urijs.js";
import URI from "/home/k6/libs/urijs.js";
import { group } from "k6";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    BASE_URL: "https://test-api.k6.io/"
  }
});

export default function() {
  group("Public APIs", function() {
    postman[Request]({
      name: "List all public crocodiles",
      id: "c4c13bc4-44d0-4b0b-aae4-d6f5b21969db",
      method: "GET",
      address: "{{BASE_URL}}/public/crocodiles/"
    });

    postman[Request]({
      name: "Get a single public crocodile",
      id: "20e4199e-f0ce-4112-820c-6cb8f1f2c059",
      method: "GET",
      address: "{{BASE_URL}}/public/crocodiles/1/"
    });
  });

  group("Registration and authentication", function() {
    postman[Request]({
      name: "Register a new user",
      id: "c86b2add-a0e9-45aa-b2b6-17d6b79c6618",
      method: "POST",
      address: "{{BASE_URL}}/user/register/",
      data:
        '{\n    "username": "{{USERNAME}}",\n    "first_name": "{{FIRSTNAME}}",\n    "last_name": "{{LASTNAME}}",\n    "email": "{{EMAIL}}",\n    "password": "{{PASSWORD}}"\n}'
    });

    postman[Request]({
      name: "Bearer/JWT token authentication",
      id: "6c1e50d8-12f4-476c-b73e-c3767ec38bc5",
      method: "POST",
      address: "{{BASE_URL}}/auth/token/login/",
      data:
        '{\n    "username": "{{USERNAME}}",\n    "password": "{{PASSWORD}}"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        pm.environment.set("REFRESH", jsonData.refresh);
        pm.environment.set("ACCESS", jsonData.access);
      }
    });
  });

  group("Private APIs", function() {
    postman[Request]({
      name: "List all your crocodiles",
      id: "ab073694-6559-484c-836f-f9e6edac6432",
      method: "GET",
      address: "{{BASE_URL}}/my/crocodiles/",
      pre() {
        const baseUrl = pm.collectionVariables.get("BASE_URL");

        const getTokenRequest = {
          url: baseUrl + "/auth/token/login/",
          method: "POST",
          header: "Content-Type:application/json",
          body: {
            mode: "application/json",
            raw: JSON.stringify({
              username: "{{USERNAME}}",
              password: "{{PASSWORD}}"
            })
          }
        };

        pm.sendRequest(getTokenRequest, function(err, res) {
          if (err === null) {
            var jsonData = res.json();
            pm.environment.set("REFRESH", jsonData.refresh);
            pm.environment.set("ACCESS", jsonData.access);
          }
        });
      },
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData[0].hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData[0].id);
        }
      }
    });

    postman[Request]({
      name: "Get a single crocodile",
      id: "f4ad74ab-0425-46a9-84ab-ba1fa0ec0318",
      method: "GET",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}",
      auth(config, Var) {
        const address = new URI(config.address);
        address.username(`${pm[Var]("USERNAME")}`);
        address.password(`${pm[Var]("PASSWORD")}`);
        config.address = address.toString();
        config.options.auth = "basic";
      }
    });

    postman[Request]({
      name: "Create a new crocodile (max 100)",
      id: "680337a3-7838-4e8d-b192-9624df96523e",
      method: "POST",
      address: "{{BASE_URL}}/my/crocodiles/",
      data:
        '{\n\t"name": "Crocodile1",\n\t"sex": "M",\n\t"date_of_birth": "2020-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Update your crocodile",
      id: "bf21d775-9103-4f69-96e9-d93c99842f0e",
      method: "PUT",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      data:
        '{\n\t"name": "Croc",\n\t"sex": "M",\n\t"date_of_birth": "2020-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Update selected fields on your crocodile",
      id: "d380c1d0-6c56-475e-b315-c62c4848aa05",
      method: "PATCH",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      data: '{\n\t"date_of_birth": "2019-04-03"\n}',
      post(response) {
        var jsonData = JSON.parse(responseBody);
        if (jsonData.hasOwnProperty("id")) {
          pm.environment.set("CROCID", jsonData.id);
        }
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });

    postman[Request]({
      name: "Remove your crocodile",
      id: "cc84d525-41eb-4ba5-a0b0-6217e5ecc709",
      method: "DELETE",
      address: "{{BASE_URL}}/my/crocodiles/{{CROCID}}/",
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var]("ACCESS")}`;
      }
    });
  });
}
